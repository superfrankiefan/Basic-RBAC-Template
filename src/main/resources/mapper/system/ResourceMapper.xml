<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sff.rbacdemo.system.mapper.ResourceMapper">
    <resultMap id="resource" type="com.sff.rbacdemo.system.entity.Resource">
        <id column="RESOURCE_ID" jdbcType="DECIMAL" property="resourceId" />
        <result column="PARENT_ID" jdbcType="DECIMAL" property="parentId" />
        <result column="RESOURCE_NAME" jdbcType="VARCHAR" property="resourceName" />
        <result column="PATH" jdbcType="VARCHAR" property="path" />
        <result column="PERMS" jdbcType="VARCHAR" property="perms" />
        <result column="ICON" jdbcType="VARCHAR" property="icon" />
        <result column="TYPE" jdbcType="CHAR" property="type" />
        <result column="ORDER_NO" jdbcType="DECIMAL" property="orderNo" />
    </resultMap>
  
    <select id="findUserPermissions" resultMap="resource">
        select m.perms from t_role r
            left join t_user_role ur on(r.role_id = ur.role_id)
            left join t_user u on(u.user_id = ur.user_id)
            left join t_role_menu rm on(rm.role_id = r.role_id)
            left join t_menu m on(m.menu_id = rm.menu_id )
            where u.username = #{userName} and m.perms is not null and m.perms &lt;&gt; ''
    </select>

<!--    <select id="findUserResources" resultMap="resource">-->
<!--        select m.* from t_menu m-->
<!--        where m.TYPE &lt;&gt; 1 and m.MENU_ID in-->
<!--            (select distinct rm.menu_id from t_role_menu rm-->
<!--            left join t_role r on(rm.role_id = r.role_id)-->
<!--            left join t_user_role ur on(ur.role_id = r.role_id)-->
<!--            left join t_user u on (u.user_id = ur.user_id)-->
<!--            where u.username = #{userName}) order by m.create_time-->
<!--    </select>-->

<!--    <select id="findAll" resultType="com.sff.rbacdemo.system.entity.Resource">-->
<!--        select * from t_resource order by resource_id-->
<!--    </select>-->

    <update id="changeToTop" parameterType="java.util.List">
        update t_resource set PARENT_ID = 100000 where RESOURCE_ID in ( select a.RESOURCE_ID from (
        (select RESOURCE_ID from t_resource where PARENT_ID in
        <foreach collection="list" item="resourceId" index="index" open="(" close=")" separator=",">
            #{resourceId}
        </foreach>
        ) ) a )
    </update>
</mapper>